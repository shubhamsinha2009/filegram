name: flutter_build_production

on: 
  push:
    tags:
      - "v*.*.*" 

jobs:
  build:
    name: Flutter Build Production (Android)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Decoding android/key.properties
        run: echo "${{ secrets.KEY_PROD }}" | base64 --decode > android/key.properties

      - name: Decoding android/keystore.jks
        run: echo "${{ secrets.KEY_JKS }}" | base64 --decode > android/app/upload-keystore.jks

      - name: Decoding firebase google-services.json
        run: echo "${{ secrets.FIREBASE_GOOGLE_SERVICES_JSON }}" | base64 --decode > android/app/google-services.json 

      - uses: olegtarasov/get-tag@v2 # that generate $GIT_TAG_NAME env
        id: tagName
        with:
          tagRegex: 'v([0-9]+.[0-9]+.[0-9]+\+[0-9]+)' # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
          tagRegexGroup: 1 # Optional. Default is 1.

      - name: Replace YAML version with tag version
        run: |
          sed -i 's/99.99.99+99/'$GIT_TAG_NAME'/g' pubspec.yaml|
          echo "Tag used version:"$GIT_TAG_NAME   

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"  

      - name: FLUTTER PUB GET    
        run: flutter pub get

      - name: FLUTTER CLEAN
        run: flutter clean

      - name: Build APK
        run: flutter build apk --split-per-abi --flavor production -t lib/main_production.dart  
        
      - name: FLUTTER PRODUCTION BUILD BUNDLE
        run: flutter build appbundle --flavor production -t lib/main_production.dart

      - name: Create github artifact release # disable this to save storage
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/*.apk,build/app/outputs/bundle/productionRelease/*.aab"
          token: ${{secrets.TOKEN}} # this is automatically provided by github

      - name: Save APPBUNDLE to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: APPBUNDLE
          path: build/app/outputs/bundle/productionRelease/app-production-release.aab

  release_internal:
    name: Release Artifacts to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get APPBUNDLE from Artifacts
        uses: actions/download-artifact@v2
        with:
          name: APPBUNDLE
      - name: Release APPBUNDLE to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_CONSOLE_JSON_KEY }}
          packageName: com.sks.filegram
          releaseFiles: app-production-release.aab
          track: internal
          whatsNewDirectory: distribution/whatsnew          
  
